types:
  TypeId: string
  Snippets:
    docs: The code snippets defined in the API
    properties:
      types:
        type: map<TypeId, string>
        docs: The type snippets defined by by the API
      endpoints:
        type: list<Endpoint>
        docs: The endpoint snippets defined by the API
  Endpoint:
    properties:
      example_identifier:
        type: optional<string>
        docs: The id of the example used to create the snippet.
      id: EndpointIdentifier
      snippet: EndpointSnippet
  EndpointIdentifier:
    properties:
      path: EndpointPath
      method: EndpointMethod
      identifier_override:
        type: optional<string>
        docs: >
          The ID for the endpoint as declared within the IR, this is a unique
          name for the endpoint, whereas path and

          method are not (specifically for the fern definition, consider chat
          and chat stream). This is optional to 

          remain backcompat with old snippets of yore.
  EndpointPath:
    docs: The relative path for an endpont (e.g. `/users/{userId}`)
    type: string
  EndpointMethod:
    enum:
      - PUT
      - POST
      - GET
      - PATCH
      - DELETE
  EndpointSnippet:
    docs: >-
      Defines a variety of different formats for an individual endpoint's
      snippet
    union:
      typescript: TypescriptEndpointSnippet
      python: PythonEndpointSnippet
      java: JavaEndpointSnippet
      go: GoEndpointSnippet
      ruby: RubyEndpointSnippet
  TypescriptEndpointSnippet:
    properties:
      client:
        type: string
        docs: |
          A full endpoint snippet, including the client instantiation, e.g.

          import { AcmeClient, Acme } from '@acme/acme-node-client';

          const acme = new AcmeClient({
            apiKey: 'YOUR_API_KEY',
          });
          await acme.admin.update({
              submission_id: "submission-12o3uds",
              request: Acme.RunningSubmissionState.QUEUEING_SUBMISSION,
          });
  RubyEndpointSnippet:
    properties:
      client:
        type: string
        docs: |
          A full endpoint snippet, including the client instantiation, e.g.

          require "acme"

          acme = Acme::Client.new(
            apiKey: 'YOUR_API_KEY'
          )
          acme.admin.update(
            submission_id: "submission-12o3uds",
            request: Acme::RunningSubmissionState::QUEUEING_SUBMISSION
          )
  PythonEndpointSnippet:
    properties:
      sync_client:
        type: string
        docs: |
          A full endpoint snippet, including the sync client instantiation, e.g.

          from acme import RunningSubmissionState
          from acme.client import Acme

          client = Acme(api_key="...")
          client.admin.update(
            submission_id="submission-12o3uds",
            request=RunningSubmissionState.QUEUEING_SUBMISSION,
          )
      async_client:
        type: string
        docs: >
          A full endpoint snippet, including the async client instantiation,
          e.g.


          from acme import RunningSubmissionState

          from acme.client import AsyncAcme


          client = AsyncAcme(api_key="...")

          await client.admin.update(
            submission_id="submission-12o3uds",
            request=RunningSubmissionState.QUEUEING_SUBMISSION,
          )
  JavaEndpointSnippet:
    properties:
      sync_client:
        type: string
        docs: |
          A full endpoint snippet, including the sync client instantiation, e.g.

          import com.acme.AcmeApiClient;
          import com.acme.resources.types.RunningSubmissionState;

          AcmeClient acmeClient = AcmeClient.builder()
              .apiKey("...")
              .build();

          acmeClient.admin().create(
            "submission-12o3uds",
            AdminUpdateRequest.builder()
              .submissionState(RunningSubmissionState.QUEUEING_SUBMISSION)
              .build());
      async_client:
        type: string
        docs: >
          A full endpoint snippet, including the async client instantiation,
          e.g.


          import com.acme.AcmeApiClient;

          import com.acme.resources.types.RunningSubmissionState;


          AcmeClient acmeClient = AcmeClient.builder()
              .apiKey("API_KEY")
              .build();

          acmeClient.admin().create(
            "submission-12o3uds",
            AdminUpdateRequest.builder()
              .submissionState(RunningSubmissionState.QUEUEING_SUBMISSION)
              .build());
  GoEndpointSnippet:
    properties:
      client:
        type: string
        docs: |
          A full endpoint snippet, including the client instantiation, e.g.

          import (
            "context"
            "fmt"

            acme "github.com/acme/acme-go"
            acmeclient "github.com/acme/acme-go/client"
          )

          client := acmeclient.NewClient(
            acmeclient.WithApiKey("..."),
          )
          client.Admin.Update(
            context.TODO(),
            "submission-12o3uds",
            &acme.AdminUpdateRequest{
              SubmissionState: acme.RunningSubmissionStateQueuingSubmission,
            },
          )
