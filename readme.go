// Code generated by Fern. DO NOT EDIT.

package generatorexec

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/fern-api/generator-exec-go/internal"
	big "math/big"
)

type BadgeType string

const (
	BadgeTypeNpm      BadgeType = "NPM"
	BadgeTypeMaven    BadgeType = "MAVEN"
	BadgeTypePypi     BadgeType = "PYPI"
	BadgeTypeGo       BadgeType = "GO"
	BadgeTypeRubygems BadgeType = "RUBYGEMS"
	BadgeTypeNuget    BadgeType = "NUGET"
	BadgeTypeCrates   BadgeType = "CRATES"
)

func NewBadgeTypeFromString(s string) (BadgeType, error) {
	switch s {
	case "NPM":
		return BadgeTypeNpm, nil
	case "MAVEN":
		return BadgeTypeMaven, nil
	case "PYPI":
		return BadgeTypePypi, nil
	case "GO":
		return BadgeTypeGo, nil
	case "RUBYGEMS":
		return BadgeTypeRubygems, nil
	case "NUGET":
		return BadgeTypeNuget, nil
	case "CRATES":
		return BadgeTypeCrates, nil
	}
	var t BadgeType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (b BadgeType) Ptr() *BadgeType {
	return &b
}

// The standard sections included in every generated README.md
//
// # {{title}}
// {{badge}} [Fern Badge]
//
// {{summary}}
//
// ## API Documentation
//
// API Reference Documentation is available {{here}}.
//
// ## Installation
//
// {{installation}}
//
// ## Usage
//
// {{usage}}
//
// ## Async Client
//
// {{asyncUsage}}
//
// ## Environments
//
// {{environments}}
//
// ## Custom URL
//
// {{customUrl}}
//
// ## Handling Errors
//
// {{errors}}
//
// ## Advanced: Setting Timeouts
//
// {{timeouts}}
//
// ## Advanced: Request Options
//
// {{requestOptions}}}
//
// ## Beta Status
//
// Some info about beta status.
//
// ## Contributing
//
// Some info about contributing.
var (
	generateReadmeRequestFieldTitle          = big.NewInt(1 << 0)
	generateReadmeRequestFieldBadge          = big.NewInt(1 << 1)
	generateReadmeRequestFieldSummary        = big.NewInt(1 << 2)
	generateReadmeRequestFieldRequirements   = big.NewInt(1 << 3)
	generateReadmeRequestFieldInstallation   = big.NewInt(1 << 4)
	generateReadmeRequestFieldUsage          = big.NewInt(1 << 5)
	generateReadmeRequestFieldAsyncUsage     = big.NewInt(1 << 6)
	generateReadmeRequestFieldTimeouts       = big.NewInt(1 << 7)
	generateReadmeRequestFieldEnvironments   = big.NewInt(1 << 8)
	generateReadmeRequestFieldCustomUrl      = big.NewInt(1 << 9)
	generateReadmeRequestFieldRequestOptions = big.NewInt(1 << 10)
)

type GenerateReadmeRequest struct {
	// The title (e.g. Acme Python Library ...)
	Title string `json:"title" url:"title"`
	// Badges rendered alongside the standard Fern badge
	Badge *BadgeType `json:"badge,omitempty" url:"badge,omitempty"`
	// The summary included below the badges (e.g. The Acme Python library provides ...)
	Summary string `json:"summary" url:"summary"`
	// Each requirement is rendered as a bulleted list
	Requirements []string `json:"requirements" url:"requirements"`
	// The installation steps
	Installation *string `json:"installation,omitempty" url:"installation,omitempty"`
	// Section describing how to instantiate the client (i.e. a code snippet)
	Usage string `json:"usage" url:"usage"`
	// Section describing how to instantiate an async client
	AsyncUsage *string `json:"asyncUsage,omitempty" url:"asyncUsage,omitempty"`
	// Section describing how to set timeouts
	Timeouts *string `json:"timeouts,omitempty" url:"timeouts,omitempty"`
	// If multiple environments, a section for how to specify multiple environments
	Environments *string `json:"environments,omitempty" url:"environments,omitempty"`
	// Section describing how to set a custom url
	CustomUrl *string `json:"customUrl,omitempty" url:"customUrl,omitempty"`
	// Section describing how to set request options
	RequestOptions *string `json:"requestOptions,omitempty" url:"requestOptions,omitempty"`

	// Private bitmask of fields set to an explicit value and therefore not to be omitted
	explicitFields *big.Int `json:"-" url:"-"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GenerateReadmeRequest) GetTitle() string {
	if g == nil {
		return ""
	}
	return g.Title
}

func (g *GenerateReadmeRequest) GetBadge() *BadgeType {
	if g == nil {
		return nil
	}
	return g.Badge
}

func (g *GenerateReadmeRequest) GetSummary() string {
	if g == nil {
		return ""
	}
	return g.Summary
}

func (g *GenerateReadmeRequest) GetRequirements() []string {
	if g == nil {
		return nil
	}
	return g.Requirements
}

func (g *GenerateReadmeRequest) GetInstallation() *string {
	if g == nil {
		return nil
	}
	return g.Installation
}

func (g *GenerateReadmeRequest) GetUsage() string {
	if g == nil {
		return ""
	}
	return g.Usage
}

func (g *GenerateReadmeRequest) GetAsyncUsage() *string {
	if g == nil {
		return nil
	}
	return g.AsyncUsage
}

func (g *GenerateReadmeRequest) GetTimeouts() *string {
	if g == nil {
		return nil
	}
	return g.Timeouts
}

func (g *GenerateReadmeRequest) GetEnvironments() *string {
	if g == nil {
		return nil
	}
	return g.Environments
}

func (g *GenerateReadmeRequest) GetCustomUrl() *string {
	if g == nil {
		return nil
	}
	return g.CustomUrl
}

func (g *GenerateReadmeRequest) GetRequestOptions() *string {
	if g == nil {
		return nil
	}
	return g.RequestOptions
}

func (g *GenerateReadmeRequest) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GenerateReadmeRequest) require(field *big.Int) {
	if g.explicitFields == nil {
		g.explicitFields = big.NewInt(0)
	}
	g.explicitFields.Or(g.explicitFields, field)
}

// SetTitle sets the Title field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetTitle(title string) {
	g.Title = title
	g.require(generateReadmeRequestFieldTitle)
}

// SetBadge sets the Badge field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetBadge(badge *BadgeType) {
	g.Badge = badge
	g.require(generateReadmeRequestFieldBadge)
}

// SetSummary sets the Summary field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetSummary(summary string) {
	g.Summary = summary
	g.require(generateReadmeRequestFieldSummary)
}

// SetRequirements sets the Requirements field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetRequirements(requirements []string) {
	g.Requirements = requirements
	g.require(generateReadmeRequestFieldRequirements)
}

// SetInstallation sets the Installation field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetInstallation(installation *string) {
	g.Installation = installation
	g.require(generateReadmeRequestFieldInstallation)
}

// SetUsage sets the Usage field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetUsage(usage string) {
	g.Usage = usage
	g.require(generateReadmeRequestFieldUsage)
}

// SetAsyncUsage sets the AsyncUsage field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetAsyncUsage(asyncUsage *string) {
	g.AsyncUsage = asyncUsage
	g.require(generateReadmeRequestFieldAsyncUsage)
}

// SetTimeouts sets the Timeouts field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetTimeouts(timeouts *string) {
	g.Timeouts = timeouts
	g.require(generateReadmeRequestFieldTimeouts)
}

// SetEnvironments sets the Environments field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetEnvironments(environments *string) {
	g.Environments = environments
	g.require(generateReadmeRequestFieldEnvironments)
}

// SetCustomUrl sets the CustomUrl field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetCustomUrl(customUrl *string) {
	g.CustomUrl = customUrl
	g.require(generateReadmeRequestFieldCustomUrl)
}

// SetRequestOptions sets the RequestOptions field and marks it as non-optional;
// this prevents an empty or null value for this field from being omitted during serialization.
func (g *GenerateReadmeRequest) SetRequestOptions(requestOptions *string) {
	g.RequestOptions = requestOptions
	g.require(generateReadmeRequestFieldRequestOptions)
}

func (g *GenerateReadmeRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler GenerateReadmeRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GenerateReadmeRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GenerateReadmeRequest) MarshalJSON() ([]byte, error) {
	type embed GenerateReadmeRequest
	var marshaler = struct {
		embed
	}{
		embed: embed(*g),
	}
	explicitMarshaler := internal.HandleExplicitFields(marshaler, g.explicitFields)
	return json.Marshal(explicitMarshaler)
}

func (g *GenerateReadmeRequest) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}
